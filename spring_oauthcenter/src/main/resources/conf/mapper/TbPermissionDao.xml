<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcj.spring_oauthcenter.dao.TbPermissionDao">
    <resultMap id="BaseResultMap" type="com.zcj.spring_oauthcenter.po.TbPermission">
        <id column="tb_permission_id" jdbcType="BIGINT" property="id"/>
        <result column="tb_permission_parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="tb_permission_name" jdbcType="VARCHAR" property="name"/>
        <result column="tb_permission_ename" jdbcType="VARCHAR" property="ename"/>
        <result column="tb_permission_url" jdbcType="VARCHAR" property="url"/>
        <result column="tb_permission_description" jdbcType="VARCHAR" property="description"/>
        <result column="tb_permission_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="tb_permission_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    tb_permission.id as tb_permission_id, tb_permission.parent_id as tb_permission_parent_id,
    tb_permission.`name` as `tb_permission_name`, tb_permission.ename as tb_permission_ename,
    tb_permission.url as tb_permission_url, tb_permission.description as tb_permission_description,
    tb_permission.create_time as tb_permission_create_time, tb_permission.update_time as tb_permission_update_time
  </sql>
    <select id="selectByExample" parameterType="com.zcj.spring_oauthcenter.po.TbPermissionExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_permission tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_permission tb_permission
        where tb_permission.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.zcj.spring_oauthcenter.po.TbPermissionExample">
        delete from tb_permission tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zcj.spring_oauthcenter.po.TbPermission"
            useGeneratedKeys="true">
    insert into tb_permission (parent_id, `name`, ename,
      url, description, create_time,
      update_time)
    values (#{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.zcj.spring_oauthcenter.po.TbPermission" useGeneratedKeys="true">
        insert into tb_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="ename != null">
                ename,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="ename != null">
                #{ename,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zcj.spring_oauthcenter.po.TbPermissionExample"
            resultType="java.lang.Long">
        select count(*) from tb_permission tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="queryByUserid" resultType="map">
        select
        p.id, p.parent_id, p.name, p.ename, p.url, p.description, p.create_time, p.update_time
        FROM
        tb_permission AS p
        LEFT JOIN tb_role_permission AS rp
        ON p.id = rp.permission_id
        LEFT JOIN tb_role AS r
        ON rp.role_id = r.id
        LEFT JOIN tb_user_role AS ur
        ON r.id = ur.role_id
        LEFT JOIN  tb_user AS u
        ON u.id = ur.user_id
        WHERE
        u.id = #{ userId }
    </select>


    <update id="updateByExampleSelective" parameterType="map">
        update tb_permission tb_permission
        <set>
            <if test="record.id != null">
                tb_permission.id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.parentId != null">
                tb_permission.parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                tb_permission.`name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.ename != null">
                tb_permission.ename = #{record.ename,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                tb_permission.url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                tb_permission.description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                tb_permission.create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                tb_permission.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_permission tb_permission
        set tb_permission.id = #{record.id,jdbcType=BIGINT},
        tb_permission.parent_id = #{record.parentId,jdbcType=BIGINT},
        tb_permission.`name` = #{record.name,jdbcType=VARCHAR},
        tb_permission.ename = #{record.ename,jdbcType=VARCHAR},
        tb_permission.url = #{record.url,jdbcType=VARCHAR},
        tb_permission.description = #{record.description,jdbcType=VARCHAR},
        tb_permission.create_time = #{record.createTime,jdbcType=TIMESTAMP},
        tb_permission.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zcj.spring_oauthcenter.po.TbPermission">
        update tb_permission
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="ename != null">
                ename = #{ename,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zcj.spring_oauthcenter.po.TbPermission">
    update tb_permission
    set parent_id = #{parentId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      ename = #{ename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
