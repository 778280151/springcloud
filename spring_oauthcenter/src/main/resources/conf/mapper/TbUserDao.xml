<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcj.spring_oauthcenter.dao.TbUserDao">
  <resultMap id="BaseResultMap" type="com.zcj.spring_oauthcenter.po.TbUser">
    <id column="tb_user_id" jdbcType="BIGINT" property="id" />
    <result column="tb_user_username" jdbcType="VARCHAR" property="username" />
    <result column="tb_user_password" jdbcType="VARCHAR" property="password" />
    <result column="tb_user_gender" jdbcType="INTEGER" property="gender" />
    <result column="tb_user_email" jdbcType="VARCHAR" property="email" />
    <result column="tb_user_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="tb_user_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tb_user_removed" jdbcType="INTEGER" property="removed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tb_user.id as tb_user_id, tb_user.username as tb_user_username, tb_user.`password` as `tb_user_password`, 
    tb_user.gender as tb_user_gender, tb_user.email as tb_user_email, tb_user.create_time as tb_user_create_time, 
    tb_user.update_time as tb_user_update_time, tb_user.removed as tb_user_removed
  </sql>
  <select id="selectByExample" parameterType="com.zcj.spring_oauthcenter.po.TbUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user tb_user
    where tb_user.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zcj.spring_oauthcenter.po.TbUserExample">
    delete from tb_user tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zcj.spring_oauthcenter.po.TbUser" useGeneratedKeys="true">
    insert into tb_user (username, `password`, gender, 
      email, create_time, update_time, 
      removed)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{removed,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zcj.spring_oauthcenter.po.TbUser" useGeneratedKeys="true">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="removed != null">
        removed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null">
        #{removed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zcj.spring_oauthcenter.po.TbUserExample" resultType="java.lang.Long">
    select count(*) from tb_user tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user tb_user
    <set>
      <if test="record.id != null">
        tb_user.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        tb_user.username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        tb_user.`password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        tb_user.gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        tb_user.email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        tb_user.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        tb_user.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.removed != null">
        tb_user.removed = #{record.removed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user tb_user
    set tb_user.id = #{record.id,jdbcType=BIGINT},
      tb_user.username = #{record.username,jdbcType=VARCHAR},
      tb_user.`password` = #{record.password,jdbcType=VARCHAR},
      tb_user.gender = #{record.gender,jdbcType=INTEGER},
      tb_user.email = #{record.email,jdbcType=VARCHAR},
      tb_user.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      tb_user.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tb_user.removed = #{record.removed,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcj.spring_oauthcenter.po.TbUser">
    update tb_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null">
        removed = #{removed,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcj.spring_oauthcenter.po.TbUser">
    update tb_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>